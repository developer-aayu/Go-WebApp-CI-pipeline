pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials-id'
        FINAL_DOCKER_IMAGE = "aayusharma1410/go-ci:${BUILD_NUMBER}"
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/developer-aayu/Go-WebApp-CI-pipeline.git'
            }
        }
        stage('Build') {
            steps {
                sh 'go build -o main'   // Build the Go binary
            }
        }
        stage('Test') {
            steps {
                sh 'go test -v ./...'   // Run tests
            }
        }
        stage('Code Quality') {
            steps {
                script {
                    def golangciLintPath = '/var/lib/jenkins/go/bin'
                    sh """
                    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ${golangciLintPath}
                    export PATH=${golangciLintPath}:$PATH
                    golangci-lint run
                    """
                }   // Run code quality checks
            }
        }
        stage('Build and Push Distroless Image') {
            steps {
                script {
                    // Build the distroless Docker image
                    sh 'docker build -t ${FINAL_DOCKER_IMAGE} .'
                    
                    // Push the distroless image to Docker Hub
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        sh 'docker push ${FINAL_DOCKER_IMAGE}'
                    }
                }
            }
        }
        
    }
    post {
        always {
            script {
                // Prune unused Docker images to free up space
                sh 'docker system prune -af'
            }
        }
        success {
            emailext (
                to: aayusharma0014@gmail.com,
                subject: "Build Successful: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                    <p>Build was successful.</p>
                    <p>Job: ${env.JOB_NAME}</p>
                    <p>Build Number: ${env.BUILD_NUMBER}</p>
                    <p>Build URL: ${env.BUILD_URL}</p>
                """
            )
        }
        failure {
            emailext (
                to: aayusharma0014@gmail.com,
                subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                    <p>Build failed. Please check the Jenkins job for details.</p>
                    <p>Job: ${env.JOB_NAME}</p>
                    <p>Build Number: ${env.BUILD_NUMBER}</p>
                    <p>Build URL: ${env.BUILD_URL}</p>
                """
            )
        }
    }
}