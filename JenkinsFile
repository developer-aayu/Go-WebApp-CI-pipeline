pipeline {
    agent {
        docker {
            image 'aayusharma1410/go-ci:v1'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials-id'
        FINAL_DOCKER_IMAGE = "aayusharma1410/go-ci:${BUILD_NUMBER}"
        GOCACHE = '/app/.cache/go-build'  // Set Go cache directory
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/developer-aayu/Go-WebApp-CI-pipeline.git'
            }
        }
        stage('Verify Workspace Mounting') {
            steps {
                sh 'echo "Listing files in /app (inside container):"'
                sh 'ls -la /app'
            }
        }
        stage('Build') {
            steps {
                sh 'go build -o main'   // Build the Go binary
            }
        }
        stage('Test') {
            steps {
                sh 'go test -v main_test.go'   // Run tests
            }
        }
        stage('Code Quality') {
            steps {
                sh 'go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.56.2'
                sh 'golangci-lint run'   // Run code quality checks
            }
        }
        stage('Build and Push Distroless Image') {
            steps {
                script {
                    // Build the distroless Docker image
                    sh 'docker build -t ${FINAL_DOCKER_IMAGE} .'
                    
                    // Push the distroless image to Docker Hub
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        sh 'docker push ${FINAL_DOCKER_IMAGE}'
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean up Docker images
            sh 'docker image prune -f || true'  // Ignore errors if docker is not found
        }
    }
}